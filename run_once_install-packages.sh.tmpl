#!/bin/bash
# Install essential packages for development environment

set -e

{{ $osId := .chezmoi.osRelease.id | lower }}

echo "🚀 Installing essential development packages..."

{{- if (contains "arch" $osId) }}
# Update system first
sudo pacman -Syu --noconfirm

# Install essential packages
sudo pacman -S --needed --noconfirm \
    base-devel \
    git \
    curl \
    wget \
    unzip \
    vim \
    nano \
    htop \
    tree \
    fzf \
    ripgrep \
    fd \
    bat \
    exa \
    dust \
    procs \
    zsh \
    oh-my-zsh-git \
    nodejs \
    npm \
    python \
    python-pip \
    docker \
    docker-compose \
    code \
    terminator

# Install AUR helper if not present
if ! command -v yay &> /dev/null; then
    echo "Installing yay AUR helper..."
    git clone https://aur.archlinux.org/yay.git /tmp/yay
    cd /tmp/yay
    makepkg -si --noconfirm
    cd -
    rm -rf /tmp/yay
fi

# Install AUR packages
yay -S --needed --noconfirm \
    google-chrome \
    discord \
    postman-bin \
    nvm
{{- else if (contains "ubuntu" $osId) }}
# Update system first
sudo apt update && sudo apt upgrade -y

# Install essential packages
sudo apt install -y \
    build-essential \
    git \
    curl \
    wget \
    unzip \
    vim \
    nano \
    htop \
    tree \
    fzf \
    ripgrep \
    fd-find \
    bat \
    zsh \
    nodejs \
    npm \
    python3 \
    python3-pip \
    docker.io \
    docker-compose \
    terminator

# Install modern CLI tools via cargo/other methods
if ! command -v exa &> /dev/null; then
    cargo install exa || echo "⚠️  Could not install exa via cargo"
fi

if ! command -v dust &> /dev/null; then
    cargo install du-dust || echo "⚠️  Could not install dust via cargo"
fi

if ! command -v procs &> /dev/null; then
    cargo install procs || echo "⚠️  Could not install procs via cargo"
fi

# Install VS Code
if ! command -v code &> /dev/null; then
    wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
    sudo install -o root -g root -m 644 packages.microsoft.gpg /etc/apt/trusted.gpg.d/
    sudo sh -c 'echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/trusted.gpg.d/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" > /etc/apt/sources.list.d/vscode.list'
    sudo apt update
    sudo apt install -y code
fi

# Install nvm
if ! command -v nvm &> /dev/null; then
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
fi

# Install oh-my-zsh
if [ ! -d "$HOME/.oh-my-zsh" ]; then
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
fi
{{- else }}
echo "⚠️  Auto-installation is configured for Arch/Manjaro and Ubuntu only."
echo "Please install these packages manually:"
echo "- base development tools"
echo "- git, curl, wget, unzip"
echo "- vim, nano, htop, tree"
echo "- fzf, ripgrep, fd, bat, exa, dust, procs"
echo "- zsh, oh-my-zsh"
echo "- nodejs, npm, python, pip"
echo "- docker, docker-compose"
echo "- VS Code, terminator"
echo "- Cascadia Code Nerd Font"
{{- end }}

# Install Node.js via nvm if available
if command -v nvm &> /dev/null; then
    echo "📦 Installing Node.js {{ .tools.node_version }}..."
    nvm install {{ .tools.node_version }}
    nvm use {{ .tools.node_version }}
    nvm alias default {{ .tools.node_version }}
fi

# Set zsh as default shell
if command -v zsh &> /dev/null && [ "$SHELL" != "$(which zsh)" ]; then
    echo "🐚 Setting zsh as default shell..."
    chsh -s $(which zsh)
fi

echo "✅ Package installation completed!"
echo "📝 Note: You may need to log out and back in for shell changes to take effect."